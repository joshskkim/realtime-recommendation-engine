# File: .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ml-service, api-gateway, cache-service]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        if: matrix.service == 'ml-service'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Set up Node.js
        if: matrix.service == 'api-gateway'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up Rust
        if: matrix.service == 'cache-service'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      
      - name: Run tests
        run: |
          cd services/${{ matrix.service }}
          case "${{ matrix.service }}" in
            ml-service)
              pip install -r requirements.txt
              pytest tests/ --cov
              ;;
            api-gateway)
              npm ci
              npm test
              ;;
            cache-service)
              cargo test
              ;;
          esac

  build:
    name: Build and Push Images
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        service: [ml-service, api-gateway, user-service, cache-service, stream-processor]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./services/${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # deploy:
  #   name: Deploy to Kubernetes
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Install kubectl
  #       uses: azure/setup-kubectl@v3
      
  #     - name: Configure kubectl
  #       run: |
  #         mkdir -p ~/.kube
  #         echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
      
  #     - name: Deploy to Kubernetes
  #       run: |
  #         kubectl apply -f k8s/base/
  #         kubectl apply -f k8s/deployments/
  #         kubectl -n recommendation-system rollout status deployment/ml-service
  #         kubectl -n recommendation-system rollout status deployment/cache-service
      
  #     - name: Run smoke tests
  #       run: |
  #         kubectl -n recommendation-system run smoke-test --rm -i --restart=Never \
  #           --image=curlimages/curl:latest -- \
  #           curl -f http://ml-service:8000/health